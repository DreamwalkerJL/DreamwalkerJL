/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState, Suspense } from 'react'
import { useGLTF, useAnimations, useVideoTexture, Decal, RenderTexture, Box, Plane, useAspect, useTexture } from '@react-three/drei'

export default function Char90(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Char90.glb')
  const { actions, ref, names } = useAnimations(animations, group);
  const [index, indexSet] = useState(0);
  useEffect(() => {
    // Reset and fade in animation after an index has been changed
    actions[names[index]].reset().fadeIn(.5).play(); // .fadeIn(0.5)
    // In the clean-up phase, fade it out
    return () => actions[names[index]] // .fadeOut(0.5)
  }, [index, actions, names]);



  function VideoMaterial({ url }) {
    const texture = useVideoTexture(url)
    return <meshBasicMaterial map={texture} toneMapped={false} />
  }

  function FallbackMaterial({ url }) {
    const texture = useTexture(url)
    return <meshBasicMaterial map={texture} toneMapped={false} />
  }
  

    function TunnelVideo() {
   
      return (
        <mesh scale={size}>
          <planeGeometry />
          <Suspense fallback={<FallbackMaterial url="Tunnel.mp4"/>}>
            <VideoMaterial url="Tunnel.mp4" />
          </Suspense>
        </mesh>
      )
    }
    const size = useAspect(1000, 500)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Ch44" geometry={nodes.Ch44.geometry} material={nodes.Ch44.material} skeleton={nodes.Ch44.skeleton} traverse frustumCulled={false}>
            <meshStandardMaterial color={'white'}/>
          </skinnedMesh>
          <skinnedMesh name="Ch44001" geometry={nodes.Ch44001.geometry} material={nodes.Ch44001.material} skeleton={nodes.Ch44001.skeleton} traverse frustumCulled={false}>
   
          </skinnedMesh>

        </group>
      </group>
                <Plane args={[5,5]} position={[0,0,-2]}>
          <Decal scale={4} position={[0,0,0]} rotation={[0,0,0]}  >
<meshStandardMaterial roughness={0.6} transparent polygonOffset polygonOffsetFactor={-10}>
        <RenderTexture attach="map" anisotropy={1}>
        <TunnelVideo/>
        {/* <Box args={[4,4]}/> */}
        <ambientLight/>
        </RenderTexture>
        </meshStandardMaterial>
</Decal>
</Plane>
    </group>
  )
}

useGLTF.preload('/Char90.glb')
